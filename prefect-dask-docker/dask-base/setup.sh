#!/bin/bash

# copied this from dask's base image here: https://github.com/dask/dask-docker/blob/main/base/prepare.sh
# wanted to emulate their process but have my own container to guard against sudden changes. Made some minor updates in this.
set -x

# We start by adding extra apt packages, since pip modules may required library
if [ "$EXTRA_APT_PACKAGES" ]; then
    echo "EXTRA_APT_PACKAGES environment variable found.  Installing."
    apt update -y
    apt install -y $EXTRA_APT_PACKAGES
fi

if [ -e "/opt/app/environment.yml" ]; then
    echo "environment.yml found. Installing packages"
    /opt/conda/bin/conda env update -f /opt/app/environment.yml
else
    echo "no environment.yml"
fi

if [ "$EXTRA_CONDA_PACKAGES" ]; then
    echo "EXTRA_CONDA_PACKAGES environment variable found.  Installing."
    /opt/conda/bin/conda install -y $EXTRA_CONDA_PACKAGES
fi

if [ "$EXTRA_PIP_PACKAGES" ]; then
    echo "EXTRA_PIP_PACKAGES environment variable found.  Installing".
    echo "installing the following packages: " 
    python -m pip install -U pip
    /opt/conda/bin/pip install --no-cache $EXTRA_PIP_PACKAGES
fi

# Run extra commands
exec "$@"


# echo "its running, yo"
# # Harden the Image

# # removing pip
# apt-get remove py-pip



# # The user the app should run as
# APP_USER=app
# # The home directory
# APP_DIR="/$APP_USER"
# # Where persistent data (volume) should be stored
# DATA_DIR="$APP_DIR/data"
# # Where configuration should be stored
# CONF_DIR="$APP_DIR/conf"


# # Add custom user and setup home directory
# adduser --system -u 1000 --disabled-login  --home $APP_DIR $APP_USER 
# mkdir "$DATA_DIR" "$CONF_DIR" 
# chown -R "$APP_USER" "$APP_DIR" "$CONF_DIR" 
# chmod 700 "$APP_DIR" "$DATA_DIR" "$CONF_DIR"



# # # Remove world-writeable permissions except for /tmp/
# # find / -xdev -type d -perm +0002 -exec chmod o-w {} + \
# #     find / -xdev -type f -perm +0002 -exec chmod o-w {} + \
# #     chmod 777 /tmp/ \
# # chown $APP_USER:root /tmp/


# # Remove interactive login shell for everybody
# sed -i -r 's#^(.*):[^:]*$#\1:/sbin/nologin#' /etc/passwd


# # Disable password login for everybody
# while IFS=: read -r username _; do passwd -l "$username"; done < /etc/passwd || true



# # Remove temp shadow,passwd,group
# find /bin /etc /lib /sbin /usr -xdev -type f -regex '.*-$' -exec rm -f {} +

# # Ensure system dirs are owned by root and not writable by anybody else.
# find /bin /etc /lib /sbin /usr -xdev -type d \
#   -exec chown root:root {} \; \
#   -exec chmod 0755 {} \;

# # Remove suid & sgid files
# find /bin /etc /lib /sbin /usr -xdev -type f -a \( -perm +4000 -o -perm +2000 \) -delete

# # Remove init scripts since we do not use them.
# rm -fr /etc/init.d /lib/rc /etc/conf.d /etc/inittab /etc/runlevels /etc/rc.conf /etc/logrotate.d

# # Remove kernel tunables
# rm -fr /etc/sysctl* /etc/modprobe.d /etc/modules /etc/mdev.conf /etc/acpi

# # Remove root home dir
# rm -fr /root

# # delete some other crap
# rm -rf usr/local/games
# rm -rf media
# rm -rf home

# # Remove fstab since we do not need them.
# rm -f /etc/fstab

# # Remove existing crontabs, if any.
# rm -fr /var/spool/cron /etc/crontabs /etc/periodic

# # Remove unnecessary user accounts.
# sed -i -r '/^(appuser|root)/!d' /etc/group
# sed -i -r '/^(appuser|root)/!d' /etc/passwd
# sed -i -r '/^(appuser|root)/!d' /etc/shadow

# # Removing files generated by sed commands above (group-, passwd- and shadow-)
# find $sysdirs -xdev -type f -regex '.*-$' -exec rm -f {} +

# sysdirs="
#   /bin
#   /etc
#   /lib
#   /sbin
#   /usr
# "




# # Remove all but a handful of admin commands.
# find /sbin /usr/sbin ! -type d \
#   -a ! -name nologin \
#   -a ! -name dotnet \
#   -delete

# # Remove dangerous commands
# # -iname strings -o \
# find /bin /etc /lib /sbin /usr -xdev \( \
#   -iname hexdump -o \
#   -iname chgrp -o \
#   -iname ln -o \
#   -iname od -o \
#   -iname su -o \
#   -iname sudo \
#   \) -delete

# # Remove all but a handful of executable commands.
# find /bin /usr/bin ! -type d \
#   -a ! -name cd \
#   -a ! -name ls \
#   -a ! -name sh \
#   -a ! -name bash \
#   -a ! -name dir \
#   -a ! -name rm \
#   -a ! -name dotnet \
#   -a ! -name find \
#   -a ! -name test \
#   -delete

# # Remove broken symlinks (because we removed the targets above).
# find $sysdirs -xdev -type l -exec test ! -e {} \; -delete



# # Run extra commands
# exec "$@"

